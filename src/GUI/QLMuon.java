/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.PhieuMuonBUS;
import DTO.PhieuMuon;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

/**
 *
 * @author User
 */
public class QLMuon extends javax.swing.JPanel {
    PhieuMuonBUS PhieuMuonBUS;
    DefaultTableModel dtm;

    /**
     * Creates new form QLMuon
     */
    public QLMuon() {
        initComponents();
        PhieuMuonBUS = new PhieuMuonBUS();
        dtm = new DefaultTableModel();
        tablePhieuMuon.setModel(dtm);
        dtm.addColumn("Mã phiếu mượn");
        dtm.addColumn("Mã độc giả");
        dtm.addColumn("Ngày mượn");
        updateTable();
        LoadSearchBy();
    }
    public void updateTable() {
        dtm.setRowCount(0);
        List <PhieuMuon> pms = PhieuMuonBUS.getAllPhieuMuon();
        pms.sort((PhieuMuon p1, PhieuMuon p2) -> p1.getMaPM().compareTo(p2.getMaPM()));
        for (PhieuMuon p : pms) {
            dtm.addRow(new Object[] {p.getMaPM(), p.getMaDG(), p.getNgayLap()}); 
        }
        this.tablePhieuMuon.setRowHeight(30);
    }
    public void LoadSearchBy() {
        ComboBox_Search.removeAllItems();
        ComboBox_Search.addItem("Mã phiếu mượn");
        ComboBox_Search.addItem("Mã độc giả");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        tablePhieuMuon = new javax.swing.JTable();
        jPanel26 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        ComboBox_Search = new javax.swing.JComboBox<>();
        btnTim = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        jPanel22 = new javax.swing.JPanel();
        btnThemPM = new javax.swing.JButton();
        btnXoaPM = new javax.swing.JButton();
        btnCapNhatPM = new javax.swing.JButton();
        btnCTPM = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(850, 515));

        tablePhieuMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu mượn", "Mã độc giả", "Ngày mượn"
            }
        ));
        jScrollPane5.setViewportView(tablePhieuMuon);

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));

        jLabel20.setText("Tìm theo :");

        ComboBox_Search.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loupe.png"))); // NOI18N
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-refresh-24.png"))); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTim, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBox_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtTim, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(ComboBox_Search)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thao tác", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        btnThemPM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus (5).png"))); // NOI18N
        btnThemPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPMActionPerformed(evt);
            }
        });

        btnXoaPM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove (1).png"))); // NOI18N
        btnXoaPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaPMActionPerformed(evt);
            }
        });

        btnCapNhatPM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit (1).png"))); // NOI18N
        btnCapNhatPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatPMActionPerformed(evt);
            }
        });

        btnCTPM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/file.png"))); // NOI18N
        btnCTPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCTPMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThemPM, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnXoaPM, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnCapNhatPM, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCTPM, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemPM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaPM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapNhatPM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCTPM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        String query = txtTim.getText();
        List <PhieuMuon> searchResults = null;
        if (ComboBox_Search.getSelectedIndex() == 0) {
            searchResults = PhieuMuonBUS.searchPhieuMuonByID(query);}
        else if (ComboBox_Search.getSelectedIndex() == 1) {
            searchResults = PhieuMuonBUS.searchPhieuMuonByMaDG(query);}
    if (searchResults != null && !searchResults.isEmpty()) {
        dtm.setRowCount(0);
        for (PhieuMuon pm : searchResults) {
            dtm.addRow(new Object[] {pm.getMaPM(), pm.getMaDG(), pm.getNgayLap()});
    }
    }
    else {
        JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
    }                                                                          
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed

    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnThemPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPMActionPerformed
        ThemPM pm = new ThemPM(this);
        pm.setLocationRelativeTo(null);
        pm.setVisible(true);
    }//GEN-LAST:event_btnThemPMActionPerformed

    private void btnXoaPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaPMActionPerformed
        int row = tablePhieuMuon.getSelectedRow();
        if (row == -1) {    
            JOptionPane.showMessageDialog(this, "Vui lòng chọn phiếu mượn để xóa.");
            return;
    }
        int confirm = JOptionPane.showConfirmDialog(this,"Bạn có chắc xóa phiếu mượn này không ? ");
        if (confirm == JOptionPane.YES_OPTION) {
            try {
            String maPM = tablePhieuMuon.getValueAt(row, 0).toString();
            PhieuMuonBUS.deletePhieuMuon(maPM);
            updateTable();
        } catch (SQLException ex) {
            if (ex.getErrorCode() == 20001) {
                JOptionPane.showMessageDialog(null,"Không thể xóa do độc giả vẫn còn sách đang mượn","Lỗi",JOptionPane.ERROR_MESSAGE);
        }
        }
        }
    }//GEN-LAST:event_btnXoaPMActionPerformed

    private void btnCapNhatPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatPMActionPerformed
        int selectedRow = tablePhieuMuon.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Chưa chọn dòng để xem chi tiết", "Thông báo", JOptionPane.WARNING_MESSAGE);}
        else {
            String selectedMaPM = (String) dtm.getValueAt(selectedRow, 0);
            PhieuMuon pm = PhieuMuonBUS.getPhieuMuonByID(selectedMaPM);
            CapNhatPM cnpm = new CapNhatPM(pm,this);
            cnpm.setLocationRelativeTo(null);
            cnpm.setVisible(true);
        }
    }//GEN-LAST:event_btnCapNhatPMActionPerformed

    private void btnCTPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCTPMActionPerformed
        int selectedRow = tablePhieuMuon.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Chưa chọn dòng để xem chi tiết", "Thông báo", JOptionPane.WARNING_MESSAGE);}
        else {
            String selectedMaPM = (String) dtm.getValueAt(selectedRow, 0);
            PhieuMuon pm = PhieuMuonBUS.getPhieuMuonByID(selectedMaPM);
            CTMuon ct = new CTMuon(pm,this);
            ct.setLocationRelativeTo(null);
            ct.setVisible(true);
        }
    }//GEN-LAST:event_btnCTPMActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox_Search;
    private javax.swing.JButton btnCTPM;
    private javax.swing.JButton btnCapNhatPM;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnThemPM;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoaPM;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tablePhieuMuon;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
